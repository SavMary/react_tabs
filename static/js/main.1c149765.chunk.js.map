{"version":3,"sources":["Components/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","onClick","selectedTabId","onTabSelected","selectedTab","useEffect","className","map","tab","type","classNames","Tab__selected","id","TabTitle__selected","title","content","App","useState","setSelectedTabId","setSelectedTab","tabItem","find","ReactDOM","render","document","getElementById"],"mappings":"mOAaaA,EAAwB,SAAC,GAM/B,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,cACAC,EACI,EADJA,YAMA,OAJAC,qBAAU,WACRF,EAAcD,KACb,CAACA,IAGF,qCACE,qBAAKI,UAAU,OAAf,SACGN,EAAKO,KAAI,SAAAC,GAAG,OACX,wBACEC,KAAK,SACLH,UAAWI,IAAW,mBAAoB,CACxCC,cAAeH,EAAII,KAAOV,IAG5BD,QAAS,kBAAMA,EAAQO,EAAII,KAN7B,SAQE,oBACEN,UAAWI,IAAW,WAAY,CAChCG,mBAAoBL,EAAII,KAAOV,IAFnC,SAKGM,EAAIM,SARFN,EAAII,SAaf,qBAAKN,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,mBACEA,UAAU,aACV,UAAQ,cAFV,SAIGF,EAAYW,kBC/CZf,EAAc,CACzB,CAAEY,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,gBAiC3BC,EA9BO,WACpB,MAA0CC,mBAASjB,EAAK,GAAGY,IAA3D,mBAAOV,EAAP,KAAsBgB,EAAtB,KACA,EAAsCD,mBAASjB,EAAK,IAApD,mBAAOI,EAAP,KAAoBe,EAApB,KAYA,OACE,sBAAKb,UAAU,MAAf,UACE,oBAAIA,UAAU,OAAd,mCACsBF,EAAYU,SAElC,cAAC,EAAD,CACEd,KAAMA,EACNC,QAjBe,SAACW,GACpBM,EAAiBN,IAiBbV,cAAeA,EACfC,cAfoB,SAACS,GACzB,IAAMQ,EAAUpB,EAAKqB,MAAK,SAAAb,GAAG,OAAIA,EAAII,KAAOA,MAAOZ,EAAK,GAExDmB,EAAeC,IAaXhB,YAAaA,QChCrBkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1c149765.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../react-app-env';\nimport './Tabs.scss';\n\ninterface Props {\n  tabs: Tab[],\n  onClick: (id: string)=> void,\n  selectedTabId: string,\n  onTabSelected: (id: string)=> void,\n  selectedTab: Tab,\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  onClick,\n  selectedTabId,\n  onTabSelected,\n  selectedTab,\n}) => {\n  useEffect(() => {\n    onTabSelected(selectedTabId);\n  }, [selectedTabId]);\n\n  return (\n    <>\n      <div className=\"Tabs\">\n        {tabs.map(tab => (\n          <button\n            type=\"button\"\n            className={classNames('Tab btn btn-info', {\n              Tab__selected: tab.id === selectedTabId,\n            })}\n            key={tab.id}\n            onClick={() => onClick(tab.id)}\n          >\n            <h3\n              className={classNames('TabTitle', {\n                TabTitle__selected: tab.id === selectedTabId,\n              })}\n            >\n              {tab.title}\n            </h3>\n          </button>\n        ))}\n      </div>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <p\n            className=\"card-title\"\n            data-cy=\"tab-content\"\n          >\n            {selectedTab.content}\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Tab } from './react-app-env';\nimport { Tabs } from './Components/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const handleSelect = (id: string): void => {\n    setSelectedTabId(id);\n  };\n\n  const handleSelectedTab = (id: string): void => {\n    const tabItem = tabs.find(tab => tab.id === id) || tabs[0];\n\n    setSelectedTab(tabItem);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"fs-2\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        onClick={handleSelect}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleSelectedTab}\n        selectedTab={selectedTab}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}